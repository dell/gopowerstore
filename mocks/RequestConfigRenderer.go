/*
 *
 * Copyright Â© 2021-2024 Dell Inc. or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	api "github.com/dell/gopowerstore/api"
	mock "github.com/stretchr/testify/mock"
)

// RequestConfigRenderer is an autogenerated mock type for the RequestConfigRenderer type
type RequestConfigRenderer struct {
	mock.Mock
}

// RenderRequestConfig provides a mock function with no fields
func (_m *RequestConfigRenderer) RenderRequestConfig() api.RequestConfig {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for RenderRequestConfig")
	}

	var r0 api.RequestConfig
	if rf, ok := ret.Get(0).(func() api.RequestConfig); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(api.RequestConfig)
	}

	return r0
}

// NewRequestConfigRenderer creates a new instance of RequestConfigRenderer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRequestConfigRenderer(t interface {
	mock.TestingT
	Cleanup(func())
}) *RequestConfigRenderer {
	mock := &RequestConfigRenderer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
